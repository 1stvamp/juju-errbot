"""This is hack for getting round the issue that errbot has no easy way to
install and configure plugins automatically without interacting with a running
bot instance, we move the existing core DB file out of the way, then
call this backup restore script, load that file and it's values,
merge them into the base one given to us by errbot, and then set our
plugin configuration in the rest of the script from juju config options.
"""

from os import environ
from os.path import exists as file_exists
from shelve import open as open_shelf


OLD_DATA_FILE = environ['ERRBOT_OLD_DATA_FILE']

if file_exists(OLD_DATA_FILE):
    bot2 = open_shelf(OLD_DATA_FILE)
    for k, v in bot2.items():
        bot[k] = v


log.info("Restoring core configs.")


# Override but don't completely hulk smash all the plugin config options
base_config = = {{ plugins_config }}
configs = bot.setdefault("configs", {})
for k, v in base_config.items():
    config = configs.setdefault(k, {})
    for sub_k, sub_v in v.items():
	config[k] = v

{% if enable_webserver %}
# Always set Webserver config from juju options
bot["configs"]["Webserver"] = {
    'HOST': '0.0.0.0',
    'PORT': 8080,
    'SSL': {'enabled': False}
}
{% else %}
if "Webserver" in bot["configs"]:
    del bot["configs"]["Webserver"]
{% endif %}

bot["repos"] = {{ plugin_repos }}

log.info("Installing plugins.")
if "repos" in bot:
    for repo in bot["repos"]:
        errors = bot.install_repo(repo)
        for error in errors:
            log.error(error)
